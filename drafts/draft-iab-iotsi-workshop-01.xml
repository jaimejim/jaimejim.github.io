<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC3444 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3444.xml">
]>
<rfc submissionType="IETF" docName="draft-iab-iotsi-workshop-01.txt" category="info"><?rfc compact="yes"?>
	<?rfc text-list-symbols="o*+-"?>
	<?rfc subcompact="no"?>
	<?rfc sortrefs="yes"?>
	<?rfc symrefs="yes"?>
	<?rfc strict="yes"?>
	<?rfc toc="yes"?>
	<front>
	<title abbrev="draft-iab-iotsi-workshop">Report from the Internet of Things (IoT) Semantic Interoperability (IOTSI) Workshop 2016</title>
	<author fullname="Jaime Jimenez" initials="J." surname="Jimenez">
	<organization>Ericsson</organization>
	<address><email>jaime.jimenez@ericsson.com</email>
	</address>
	</author>

	<author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
	<organization>ARM</organization>
	<address><email>hannes.tschofenig@arm.com</email>
	</address>
	</author>

	<author fullname="Dave Thaler" initials="D." surname="Thaler">
	<organization>Microsoft</organization>
	<address><email>dthaler@microsoft.com</email>
	</address>
	</author>

	<date day="14" month="November" year="2016"/>
	<abstract><t>
   This document provides a summary of the 'Workshop on Internet of
   Things (IoT) Semantic Interoperability (IOTSI)'
   which took place in Santa Clara, CA, on March 17-18, 2016.  The main
   goal of the workshop was to foster a discussion on the different
   approaches used by companies and standards developing organizations
   to accomplish interoperability at the application layer.  This report
   summarizes the discussions and lists recommendations to the standards
   community.  The views and positions in this report are those of the
   workshop participants and do not necessarily reflect those of the
   authors and the Internet Architecture Board (IAB), which organized
   the workshop.</t>

	</abstract>
	</front>

	<middle>
	<section title="Introduction" anchor="section-1"><t>
   The Internet Architecture Board (IAB) holds occasional workshops
   designed to consider long-term issues and strategies for the
   Internet, and to suggest future directions for the Internet
   architecture.  The investigated topics often require of the coordinated
   efforts of many organizations and industry bodies to improve an
   identified problem.  One of the targets of the workshops is to
   establish communication between relevant organizations, specially
   when the topics are out of the scope for the Internet Engineering
   Task Force (IETF).  This long-term planning function of the IAB is
   complementary to the ongoing engineering efforts performed by working
   groups of the IETF.</t>

	<t>
   Increasing interoperability in the area of Internet of Things (IoT)
   has been a top priority for many standards organizations and
   pariticularly the lower layers of the Internet protocol stack have
   received a lot of attention.  Also at the application layer, such as
   with CoAP and HTTP, there is a trend in reusing RESTful design
   patterns.  However, data exchanged on top of these application layer
   protocols there is still a lot of fragmentation and the same degree
   of increase in interoperability has not been observed.</t>

	<t>
   Thus, the IAB decided to organize a workshop to reach out to relevant
   stakeholders to explore the state-of-the-art on 'IoT Semantic Interoperability' and to identify
   communality and gaps <xref target="IOTSIAG"/>, <xref target="IOTSIWS"/>. </t>

	<t><list style="symbols"><t>The different perceived state of the art on data and information
      models.</t>

	<t>The lack of an encoding-independent standardization of the
      information, the so-called information model.</t>

	<t>The strong relationship with the underlying communication pattern,
      such as remote procedure calls (RPC), publish/subscribe or RESTful
      dessigns.</t>

	<t>Identifying which similar concepts groups have develop in
      parallel, specially those that would require only slight
      modifications to solve interoperability.</t>

	<t>Identifying how existing data models can be mapped against each
      other to offer inter working.</t>

	<t>Identifying common use cases for cooperation and harmonization.</t>

	</list>
	</t>

	</section>

	<section title="Terminology" anchor="section-2"><t>
   The first roadblock to semantic interoperability is the lack of a
   common vocabulary to start the discussion.  There is a need to align
   between participating organizations on a common set of basic terms.
   <xref target="RFC3444"/> does a start by separating conceptual models for designers
   or Information Models (IMs) and concrete detailed definitions for
   implementors or Data Models (DMs).  There are concepts that are
   undefined in that RFC and elsewhere, such as the interaction with the
   resources of an endpoint or Interaction Model.  Therefore the three
   "main" common models that could be identified were:</t>

	<t><list style="hanging" hangIndent="3"><t hangText="Information Model (IM)">
	it defines an environment at the highest
	<vspace blankLines="0"/>
	level of abstraction, they express the desired functionality.
      They can be defined informally (e.g. in plain English) or more
      formally (e.g.  UML, Entity-Relationship Diagrams, etc.).
      Implementation details are hidden.
	</t>

	<t hangText="Data Model (DM)">
	it defines concrete data representations at a lower
	<vspace blankLines="0"/>
	level of abstraction, including implementation and protocol-
      specific details.  Some examples are: SNMP Management Information
      Base (MIBs), W3C Thing Description (TD) Things, YANG models, LWM2M
      Schemas, OCF Schemas and so on.
	</t>

	<t hangText="Interaction Model (IN)">
	it defines how data is accessed and retrieved
	<vspace blankLines="0"/>
	from the endpoints, being therefore tied to the specific
      communication pattern that the system has (e.g.  REST methods,
      Publish/Subscribe operations or RPC-calls).
	</t>

	</list>
	</t>

	<t>
   Another identified terminology issue is the semantic meaning overload
   that some terms have.  Meaning will vary depending on the context the
   term is used.  Some examples of such terms are: semantics, models,
   encoding, serialization format, media types or encoding types.  Due
   to time constraints no concrete terminology was agreed upon, however
   work will continue within each organization to create various
   terminology documents, see <xref target="IOTSIGIT"/>.</t>

	</section>

	<section title="Architecture" anchor="section-3"><t>
   Architectures follow different design patterns, some are REST-
   oriented with clear methods to find and manipulate resources on
   endpoints with almost no state kept between them.  Others are more
   Publish/Subscribe-oriented that focus on the flow of information
   based on the topics of the information that is being shared.  Others
   are RPC-like requiring to know beforehand the set of parameters that
   are accessed, requiring to generate code both on the client and
   server side, they are tightly coupled and service-oriented.</t>

	<t><list style="hanging" hangIndent="3"><t hangText="Thing-hub-cloud">
	things talk to a hub, which talks back to them and
	<vspace blankLines="0"/>
	to the cloud.  There is a spectrum of emphasis on the hub vs. the
      cloud.  For some the hub is simply an access point; for others it
      is a critical place for control loops and ALGs.
	</t>

	<t hangText="Meta Thing">
	some things are actually virtual, like an alarm composed
	<vspace blankLines="0"/>
	of clock, lights, and thermostat.
	</t>

	<t hangText="Nearby things">
	some things may be geospatially related even if they
	<vspace blankLines="0"/>
	are not on the same network or within the same administrative
      domain.
	</t>

	</list>
	</t>

	<t>
   Current data models and definitions for "things" often focus on
   defining actual physical devices and representing their state.  That
   focus should perhaps be shifted into a more holistic or user-oriented
   perspective, defining abstract concepts as well.  On the other a lot
   of focus is placed on human interaction with physical devices while
   IoT will be more oriented to interaction between "things" instead.</t>

	<t>
   Those things should be designed to be multiple-purpose, keeping in
   mind that solutions should be open-ended to facilitate new usages and
   new future domains of operation. this pattern has already happened,
   devices that were intended for one purpose end up being used for a
   different one given the right context ((e.g. smart phone led light
   turned out to be a heartrate monitor).  IoT domain is currently
   missing insights into what user actually expect.</t>

	</section>

	<section title="What Problems to Solve" anchor="section-4"><t>
   Although the workshop focused on a specific problem it became obvious
   from the position papers that various organizations, industry groups
   and individuals attempted to solve different problems.  At least the
   following goals have been described:</t>

	<t><list style="symbols"><t>Formal Languages for Documentation Purposes</t>

	</list>
	</t>

	<t>
   Standardization organizations are in the need for a more formal
   description of their information and data models in order to simplify
   review, and publication.  For example, the Open Mobile Alliance (OMA)
   used an XML schema <xref target="LWM2M-Schema"/> to describe their object
   definitions (i.e., data model) as XML instance documents.  These XML
   documents offer an alternative way of describing objects compared to
   the tabular representation found in the specification itself.  The
   XML files of standardized objects are available for download at
   <xref target="OMNA"/>.  Furthermore, a tool is offered to define new objects and
   resources.  The online editor tool can be found at <xref target="OMA-Editor"/>.</t>

	<t><list style="symbols"><t>Formal Languages for Code Generation</t>

	</list>
	</t>

	<t>
   Formal data and information modelling languages for use by developers
   to enable code generation.  For example, the Allseen Visual Studio
   Plugin <xref target="Allseen-Plugin"/> offers a wizzard to generate code based on
   the formal description of the data model.  Another example of a data
   modelling language that can be used for code generation is YANG.  A
   popular tool to help with code generation of YANG modules is pyang
   <xref target="PYANG"/>.</t>

	<t><list style="symbols"><t>Debugging Support</t>

	</list>
	</t>

	<t>
   Ability to allow debugging tools to implement generic object browsers
   by utilizing the standardized information and data model.  Example:
   NRF Bluetooth Smart sniffer from Nordic Semiconductor <xref target="nRF-Sniffer"/>.</t>

	<t><list style="symbols"><t>Translation</t>

	</list>
	</t>

	<t>
   The ability for gateways and other similar devices to dynamically
   translate (or map) one data model to another one.  An example of this
   idea can be found in <xref target="UDI"/>.</t>

	<t><list style="symbols"><t>Runtime Discovery</t>

	</list>
	</t>

	<t>
   Allow IoT devices to exchange information, potentially along with the
   data exchange, to discover meta-data about the data and, potentially,
   even a self-describing interaction model.  An example of such an
   approach has been shown with HATEOAS <xref target="HATEOAS"/>.</t>

	</section>

	<section title="Translation" anchor="section-5"><t>
   One of the targets of interoperability is to create translators
   between the data models.  There are analogies with gateways back in
   1985 when they were used to translate between network protocols,
   eventually IP took over providing interoperability, however we lost
   some of the features provided by those other protocols.  The creation
   of an equivalent "hub/s" that offer translation between the different
   data models or data semantics seems one of the ways forward.  Some
   lose of expressiveness due to the translation between models seems
   also unavoidable.</t>

	<t>
   When it comes to translation two different distinctions appear:
   translating data between data models and translating data models.
   The first one implies doing the translation at runtime while the
   second performs one translation between the data models one time,
   like translating a YANG model to a RAML/JSON one.  Indeed, for every
   IM multiple DMs could be translated.</t>

	<t>
   In a sense these distinctions affect as to when the translation is
   performed.  It can be done at "design time" when the information
   model is done, it can be done at runtime for a concrete data model
   and it can be done depending n the actual serialization.</t>

	<t>
   Yet another distinction will appear depending on the requirements
   from the application protocols, RPC-style ones might require a
   slightly different DM than REST ones for similar operations, for
   example SNMP-traps could be similar to CoAP-Observations but not
   quite the same.  It is easier to translate between systems that
   follow the same architecture/design pattern than across
   architectures, full translation might not even be possible (e.g.
   stateless vsstateful systems).</t>

	<t>
   Translation of models script to translate XML to YANG Translation of
   serialized data, on a hub in order to normalize it to other data
   model.</t>

	</section>

	<section title="Dealing with change" anchor="section-6"><t>
   A large part of the workshop was dedicated to the evolution of
   devices and server side applications.  Multiple of the participating
   groups have defined data formats for data representation, however
   interactions between devices and services and how their relationship
   evolves over time is more related to the interaction model.</t>

	<t>
   There are various approaches to it.  In the most primitive case, a
   developer will use a description of an API and implement whichever
   are the protocol steps.  In some cases the information model itself
   can be used to generate some of the code stubs.  Changes of an API
   imply changes on the clients to upgrade to the new version, which
   requires some development of new code to satisfy the needs of the new
   API.</t>

	<t>
   New, approaches imply that the whole interaction could be machine-
   understandable on the first place with changes happening at runtime.
   In it, a machine client can discover the possible interactions with a
   service, adapting to changes as they occur without specific code
   being developed to adapt to them.</t>

	<t>
   The challenge seems to be to define the human-readable parts as
   machine-readable.  Machine-readable require a shared vocabulary to
   give meaning to the tags.</t>

	<t>
   These type of interactions are based on the The REST architectural
   style. the principle is that the device or the endpoint, just needs a
   single entry point, the server would provide descriptions of the API
   inband by means of web links and forms.</t>

	<t>
   By defining IoT specific relation types, it is possible to drive
   interactions through links instead of hardcoding URIs into the
   client, thus making the system flexible enough for later changes.
   The definition of the basic hypermedia formats for IoT is still work
   in progress, however some of the existing mechanism can be reused,
   such as resource discovery, forms or links.</t>

	</section>

	<section title="Acknowledgements" anchor="section-7"><t>
   We would like to thank all paper authors and participants for their
   contributions.  Due to the large number of position paper submissions
   we were unfortunately unable to invite every author; we would like to
   apologize to those that could not attend the workshop.</t>

	</section>

	<section title="Appendix A: Program Committee" anchor="section-8"><t>
   This workshop was organized by the following individuals: Jari Arkko,
   Ralph Droms, Jaime Jimenez, Michael Koster, Dave Thaler, and Hannes
   Tschofenig.</t>

	</section>

	<section title="Appendix B: Accepted Position Papers" anchor="section-9"><t><list style="numbers"><t> Jari Arkko, "Gadgets and Protocols Come and Go, Data Is Forever"</t>

	<t> Carsten Bormann, "Noise in specifications hurts"</t>

	<t> Benoit Claise, "YANG as the Data Modelling Language in the IoT space"</t>

	<t> Robert Cragie, "The ZigBee Cluster Library over IP"</t>

	<t> Dee Denteneer, Michael Verschoor, Teresa Zotti, "Fairhair: interoperable IoT services for major Building Automation and Lighting Control ecosystems"</t>

	<t> Universal Devices, "Object Oriented Approach to IoT Interoperability"</t>

	<t> Bryant Eastham, "Interoperability and the OpenDOF Project"</t>

	<t> Stephen Farrell, Alissa Cooper, "It's Often True: Security's Ignored (IOTSI) - and Privacy too"</t>

	<t> Christian Groves, Lui Yan, ang Weiwei, "Overview of IoT semantics landscape"</t>

	<t>Ted Hardie, "Loci of Interoperability for the Internet of Things"</t>

	<t>Russ Housley, "Vehicle-to-Vehicle and Vehicle-to-Infrastructure Communications"</t>

	<t>Jaime Jimenez, Michael Koster, Hannes Tschofenig, "IPSO Smart Objects"</t>

	<t>David Jones, IOTDB - "Interoperability Through Semantic Metastandards"</t>

	<t>Sebastian Kaebisch, Darko Anicic, "Thing Description as Enabler of Semantic Interoperability on the Web of Things"</t>

	<t>Achilleas Kemos, "Alliance for Internet of Things Innovation Semantic Interoperability Release 2.0, AIOTI WG03 - IoT Standardisation"</t>

	<t>Ari Keraenen, Cullen Jennings, "SenML: simple building block for IoT semantic interoperability"</t>

	<t>Dongmyoung Kim, Yunchul Choi, Yonggeun Hong, "Research on Unified Data Model and Framework to Support Interoperability between IoT Applications"</t>

	</list>
	</t>

	<t>
   18.  Michael Koster, "Model-Based Hypertext Language"</t>

	<t><list style="numbers"><t>Matthias Kovatsch, Yassin N.  Hassan, Klaus Hartke, "Semantic Interoperability Requires self describing Interaction Models"</t>

	<t>Kai Kreuzer, "A Pragmatic Approach to Interoperability in the Internet of Things"</t>

	</list>
	</t>

	<t>
   21.  Barry Leiba, "Position Paper"</t>

	<t>
   22.  Marcello Lioy, "AllJoyn"</t>

	<t><list style="numbers"><t>Kerry Lynn, Laird Dornin, "Modeling RESTful APIs with JSON Hyper-Schema"</t>

	<t>Erik Nordmark, "Thoughts on IoT Semantic Interoperability: Scope of security issues"</t>

	<t>Open Geospatial Consortium, "OGC SensorThings API: Communicating "Where" in the Web of Things"</t>

	<t>Jean Paoli, Taqi Jaffri, "IoT Information Model Interoperability: An Open, Crowd-Sourced Approach in Three Parallel Parti"</t>

	</list>
	</t>

	<t>
   27.  Joaquin Prado, "OMA Lightweight M2M Resource Model"</t>

	<t><list style="numbers"><t>Dave Raggett, Soumya Kanti Datta, "Input paper for IAB Semantic Interoperability Workshop"</t>

	<t>Pete Rai, Stephen Tallamy, "Semantic Overlays Over Immutable Data to Facilitate Time and Context Specific Interoperability"</t>

	<t>Jasper Roes, Laura Daniele, "Towards semantic interoperability in the IoT using the Smart Appliances REFerence ontology (SAREF) and its extensions"</t>

	<t>Max Senges, "Submission for IAB IoT Sematic Interoperability workshop"</t>

	<t>Bill Silverajan, Mert Ocak, Jaime Jimenez, "Implementation Experiences of Semantic Interoperability for RESTful Gateway Management"</t>

	<t>Ned Smith, Jeff Sedayao, Claire Vishik, "Key Semantic Interoperability Gaps in the Internet-of-Things Meta-Models"</t>

	<t>Robert Sparks and Ben Campbell, "Considerations for certain IoT based services"</t>

	</list>
	</t>

	<t>
   35.  J.  Clarke Stevens, "Open Connectivity Foundation oneIoTa Tool"</t>

	<t><list style="numbers"><t>J.  Clarke Stevens, Piper Merriam, "Derived Models for Interoperability Between IoT Ecosystems"</t>

	<t>Ravi Subramaniam, "Semantic Interoperability in Open Connectivity Foundation (OCF) - formerly Open Interconnect Consortium (OIC)""</t>

	</list>
	</t>

	<t>
   38.  Andrew Sullivan, "Position paper for IOTSI workshop"</t>

	<t><list style="numbers"><t>Darshak Thakore, "IoT Security in the context of Semantic Interoperability"</t>

	</list>
	</t>

	<t>
   40.  Dave Thaler, "IoT Bridge Taxonomy"</t>

	<t><list style="numbers"><t>Dave Thaler, S"ummary of AllSeen Alliance Work Relevant to Semantic Interoperability"</t>

	<t>Mark Underwood, Michael Gruninger, Leo Obrst, Ken Baclawski,
        Mike Bennett, Gary Berg-Cross, Torsten Hahmann, Ram Sriram,
        "Internet of Things: Toward Smart Networked Systems and Societies"</t>

	<t>Peter van der Stok, Andy Bierman, "YANG-Based Constrained Management Interface (CoMI)"</t>

	</list>
	</t>

	</section>

	<section title="Appendix C: List of Participants" anchor="section-10"><t><list style="symbols"><t>Andy Bierman, YumaWorks</t>

	<t>Carsten Bormann, Uni Bremen/TZI</t>

	<t>Ben Campbell, Oracle</t>

	<t>Benoit Claise, Cisco</t>

	<t>Alissa Cooper, Cisco</t>

	<t>Robert Cragie, ARM Limited</t>

	<t>Laura Daniele, TNO</t>

	<t>Bryant Eastham, OpenDof</t>

	<t>Christian Groves, Huawei</t>

	<t>Ted Hardie, Google</t>

	<t>Yonggeun Hong, ETRI</t>

	<t>Russ Housley, Vigil Security</t>

	<t>David Janes, IOTDB</t>

	<t>Jaime Jimenez, Ericsson</t>

	<t>Shailendra Karody, Catalina Labs</t>

	<t>Ari Keraenen, Ericsson</t>

	<t>Michael Koster, SmartThings</t>

	<t>Matthias Kovatsch, Siemens</t>

	<t>Kai Kreuzer, Deutsche Telekom</t>

	<t>Barry Leiba, Huawei</t>

	<t>Steve Liang, Uni Calgary</t>

	<t>Marcello Lioy, Qualcomm</t>

	<t>Kerry Lynn, Verizon</t>

	<t>Mayan Mathen, Catalina Labs</t>

	<t>Erik Nordmenk, Arista</t>

	<t>Jean Paoli, Microsoft</t>

	<t>Joaquin Prado, OMA</t>

	<t>Dave Raggett, W3C</t>

	<t>Max Senges, Google</t>

	<t>Ned Smith, Intel</t>

	<t>Robert Sparks, Oracle</t>

	<t>Ram Sriram, NIST</t>

	<t>Clarke Stevens</t>

	<t>Ram Subramanian, Intel</t>

	<t>Andrew Sullivan, DIN</t>

	<t>Darshak Thakore, Cablelabs</t>

	<t>Dave Thaler, Microsoft</t>

	<t>Hannes Tschofenig, ARM Limited</t>

	<t>Michael Verschoor, Philips Lightning</t>

	</list>
	</t>

	</section>

	</middle>

	<back>
	<references title="Informative References">
	<reference anchor="Allseen-Plugin"><front>
	<title>Using the AllJoyn Studio Extension</title>
	<author fullname="B. Rockwell" initials="B." surname="Rockwell">
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="HATEOAS"><front>
	<title>Semantic Interoperability Requires Self&amp;#173;describing Interaction Models - HATEOAS for the Internet of Things</title>
	<author fullname="M. Kovatsch" initials="M." surname="Kovatsch">
	</author>

	<date year="2016"/>
	</front>

	<seriesInfo name="Proceedings" value="of the IoT Semantic Interoperability Workshop 2016"/>
	</reference>
	<reference anchor="IOTSIAG" target="https://www.iab.org/activities/workshops/iotsi/agenda/"><front>
	<title>IoT Workshop for Semantic Interoperability (IOTSI) - Agenda and Slides</title>
	<author>
	<organization>IAB</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="IOTSIGIT" target="https://github.com/iotsi"><front>
	<title>Github Collaborative Repository</title>
	<author>
	<organization>IOTSI</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="IOTSIWS" target="https://www.iab.org/activities/workshops/iotsi/"><front>
	<title>IoT Workshop for Semantic Interoperability (IOTSI) 2016 - Main Page and Position Papers</title>
	<author>
	<organization>IAB</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="LWM2M-Schema"><front>
	<title>OMA LWM2M XML Schema</title>
	<author>
	<organization>OMA</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="OMA-Editor"><front>
	<title>OMA LWM2M Object and Resource Editor</title>
	<author>
	<organization>OMA</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="OMNA"><front>
	<title>OMNA Lightweight M2M (LWM2M) Object &amp; Resource Registry</title>
	<author>
	<organization>OMA</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	<reference anchor="PYANG"><front>
	<title>An extensible YANG validator and converter in python</title>
	<author fullname="M. Bjorklund" initials="M." surname="Bjorklund">
	</author>

	<date year="2016"/>
	</front>

	</reference>
	&RFC3444;
	<reference anchor="UDI"><front>
	<title>Object Oriented Approach to IoT Interoperability</title>
	<author fullname="M. Kohanim" initials="M." surname="Kohanim">
	</author>

	<date year="2016"/>
	</front>

	<seriesInfo name="Proceedings" value="of the IoT Workshop for Semantic Interoperability (IOTSI)"/>
	</reference>
	<reference anchor="nRF-Sniffer"><front>
	<title>nRF Sniffer - Smart/Bluetooth low energy packet sniffer</title>
	<author>
	<organization>Nordic Semiconductor</organization>
	</author>

	<date year="2016"/>
	</front>

	</reference>
	</references>
	</back>

	</rfc>
